name: Ejecutar Asistente Automatizado

on:
  push:
    branches:
      - main

jobs:
  run-asistente:
    runs-on: ubuntu-latest

    steps:
    - name: Clonar el repositorio
      uses: actions/checkout@v3

    - name: Configurar Python
      uses: actions/setup-python@v4
      with:
        python-version: 3.9

    - name: Instalar dependencias
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt

    - name: Verificar secretos
      run: |
        echo "Verificando secretos..."
        echo "OPENAI_API_KEY=${{ secrets.OPENAI_API_KEY }}"
        echo "TWILIO_ACCOUNT_SID=${{ secrets.TWILIO_ACCOUNT_SID }}"
        echo "NGROK_AUTH_TOKEN=${{ secrets.NGROK_AUTH_TOKEN }}"

    - name: Instalar y configurar ngrok
      run: |
        echo "Instalando ngrok..."
        sudo apt update && sudo apt install -y jq
        curl -s https://ngrok-agent.s3.amazonaws.com/ngrok.asc | sudo tee /etc/apt/trusted.gpg.d/ngrok.asc >/dev/null
        echo "deb https://ngrok-agent.s3.amazonaws.com buster main" | sudo tee /etc/apt/sources.list.d/ngrok.list >/dev/null
        sudo apt update && sudo apt install -y ngrok
        echo "Autenticando ngrok..."
        ngrok authtoken ${{ secrets.NGROK_AUTH_TOKEN }}

    - name: Obtener URL pública de ngrok
      run: |
        echo "Obteniendo la URL pública de ngrok..."
        nohup ngrok http 5000 > /dev/null 2>&1 &
        sleep 10
        export NGROK_URL=$(curl -s http://127.0.0.1:4040/api/tunnels | jq -r '.tunnels[0].public_url')
        echo "NGROK_URL=$NGROK_URL" >> $GITHUB_ENV
        echo "URL pública de ngrok: $NGROK_URL"

    - name: Configurar variables de entorno
      run: |
        echo "Configurando archivo .env con las variables necesarias..."
        echo "OPENAI_API_KEY=${{ secrets.OPENAI_API_KEY }}" > .env
        echo "TWILIO_ACCOUNT_SID=${{ secrets.TWILIO_ACCOUNT_SID }}" >> .env
        echo "TWILIO_AUTH_TOKEN=${{ secrets.TWILIO_AUTH_TOKEN }}" >> .env
        echo "NGROK_URL=$NGROK_URL" >> .env
        echo "Archivo .env configurado exitosamente."

    - name: Ejecutar Flask
      run: |
        python app.py



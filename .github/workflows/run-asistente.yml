name: Ejecutar Asistente Automatizado

on:
  push:
    branches:
      - main

jobs:
  ejecutar-asistente:
    runs-on: ubuntu-latest

    steps:
      - name: Clonar repositorio
        uses: actions/checkout@v3

      - name: Configurar Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.9"

      - name: Instalar dependencias
        run: |
          echo "Instalando dependencias..."
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Verificar secretos
        run: |
          echo "Verificando claves..."
          if [ -z "${{ secrets.OPENAI_API_KEY }}" ]; then echo "Falta OPENAI_API_KEY"; exit 1; fi
          if [ -z "${{ secrets.NGROK_AUTH_TOKEN }}" ]; then echo "Falta NGROK_AUTH_TOKEN"; exit 1; fi
          if [ -z "${{ secrets.TWILIO_ACCOUNT_SID }}" ]; then echo "Falta TWILIO_ACCOUNT_SID"; exit 1; fi
          if [ -z "${{ secrets.TWILIO_AUTH_TOKEN }}" ]; then echo "Falta TWILIO_AUTH_TOKEN"; exit 1; fi
          if [ -z "${{ secrets.TWILIO_WHATSAPP_NUMBER }}" ]; then echo "Falta TWILIO_WHATSAPP_NUMBER"; exit 1; fi
          echo "Todos los secretos están configurados."

      - name: Descargar e instalar ngrok
        run: |
          echo "Instalando ngrok..."
          wget https://bin.equinox.io/c/bNyj1mQVY4c/ngrok-v3-stable-linux-amd64.tgz
          tar -xvzf ngrok-v3-stable-linux-amd64.tgz
          sudo mv ngrok /usr/local/bin
          ngrok authtoken ${{ secrets.NGROK_AUTH_TOKEN }}

      - name: Configurar ngrok y obtener URL pública
        run: |
          echo "Iniciando ngrok..."
          nohup ngrok http 5000 &
          sleep 5
          export NGROK_URL=$(curl -s http://127.0.0.1:4040/api/tunnels | jq -r '.tunnels[0].public_url')
          echo "URL pública de ngrok: $NGROK_URL"

      - name: Ejecutar Flask
        run: |
          echo "Ejecutando Flask con ngrok URL: $NGROK_URL"
          python app.py

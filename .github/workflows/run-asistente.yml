name: Ejecutar Asistente Automatizado

on:
  push:
    branches:
      - main

jobs:
  ejecutar-asistente:
    runs-on: ubuntu-latest

    steps:
    - name: Clonar repositorio
      uses: actions/checkout@v3

    - name: Configurar Python
      uses: actions/setup-python@v4
      with:
        python-version: "3.9"

    - name: Instalar dependencias
      run: |
        echo "Instalando dependencias..."
        python -m pip install --upgrade pip
        pip install -r requirements.txt

    - name: Verificar secretos
      run: |
        echo "Verificando secretos..."
        for secret in OPENAI_API_KEY NGROK_AUTH_TOKEN TWILIO_ACCOUNT_SID TWILIO_AUTH_TOKEN TWILIO_WHATSAPP_NUMBER; do
          if [ -z "${{ secrets[$secret] }}" ]; then echo "Falta $secret"; exit 1; fi
        done
        echo "Todos los secretos están configurados correctamente."

    - name: Descargar e instalar ngrok
      run: |
        echo "Descargando ngrok..."
        curl -s https://bin.equinox.io/c/bNyj1mQVY4c/ngrok-v3-stable-linux-amd64.tgz -o ngrok.tgz
        tar -xzf ngrok.tgz -C /usr/local/bin
        chmod +x /usr/local/bin/ngrok
        ngrok version

    - name: Configurar ngrok y obtener URL pública
      run: |
        echo "Iniciando ngrok..."
        ngrok config add-authtoken ${{ secrets.NGROK_AUTH_TOKEN }}
        nohup ngrok http 5000 > ngrok.log &
        sleep 5
        export NGROK_URL=$(curl -s http://127.0.0.1:4040/api/tunnels | jq -r '.tunnels[0].public_url')
        echo "URL pública de ngrok: $NGROK_URL"
        echo "NGROK_URL=$NGROK_URL" >> $GITHUB_ENV

    - name: Ejecutar Flask
      env:
        NGROK_URL: ${{ env.NGROK_URL }}
      run: |
        echo "Ejecutando Flask con ngrok URL: $NGROK_URL"
        python app.py
